#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Geologiya
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="GEOLOGIYA")]
	public partial class DannieDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertdanie(danie instance);
    partial void Updatedanie(danie instance);
    partial void Deletedanie(danie instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public DannieDataClassesDataContext() : 
				base(global::Geologiya.Properties.Settings.Default.GEOLOGIYAConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DannieDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DannieDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DannieDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DannieDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<danie> danies
		{
			get
			{
				return this.GetTable<danie>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
	}
	
	[Table(Name="dbo.danie")]
	public partial class danie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _nomer;
		
		private string _tema1;
		
		private string _tema2;
		
		private string _Aftor;
		
		private string _Naz;
		
		private string _Org;
		
		private string _Gorod;
		
		private System.Nullable<int> _God;
		
		private string _Str;
		
		private string _Ilustr;
		
		private string _Slova;
		
		private string _Referat;
		
		private string _Mesto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnnomerChanging(System.Nullable<int> value);
    partial void OnnomerChanged();
    partial void Ontema1Changing(string value);
    partial void Ontema1Changed();
    partial void Ontema2Changing(string value);
    partial void Ontema2Changed();
    partial void OnAftorChanging(string value);
    partial void OnAftorChanged();
    partial void OnNazChanging(string value);
    partial void OnNazChanged();
    partial void OnOrgChanging(string value);
    partial void OnOrgChanged();
    partial void OnGorodChanging(string value);
    partial void OnGorodChanged();
    partial void OnGodChanging(System.Nullable<int> value);
    partial void OnGodChanged();
    partial void OnStrChanging(string value);
    partial void OnStrChanged();
    partial void OnIlustrChanging(string value);
    partial void OnIlustrChanged();
    partial void OnSlovaChanging(string value);
    partial void OnSlovaChanged();
    partial void OnReferatChanging(string value);
    partial void OnReferatChanged();
    partial void OnMestoChanging(string value);
    partial void OnMestoChanged();
    #endregion
		
		public danie()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_nomer", DbType="Int")]
		public System.Nullable<int> nomer
		{
			get
			{
				return this._nomer;
			}
			set
			{
				if ((this._nomer != value))
				{
					this.OnnomerChanging(value);
					this.SendPropertyChanging();
					this._nomer = value;
					this.SendPropertyChanged("nomer");
					this.OnnomerChanged();
				}
			}
		}
		
		[Column(Storage="_tema1", DbType="NVarChar(MAX)")]
		public string tema1
		{
			get
			{
				return this._tema1;
			}
			set
			{
				if ((this._tema1 != value))
				{
					this.Ontema1Changing(value);
					this.SendPropertyChanging();
					this._tema1 = value;
					this.SendPropertyChanged("tema1");
					this.Ontema1Changed();
				}
			}
		}
		
		[Column(Storage="_tema2", DbType="NVarChar(MAX)")]
		public string tema2
		{
			get
			{
				return this._tema2;
			}
			set
			{
				if ((this._tema2 != value))
				{
					this.Ontema2Changing(value);
					this.SendPropertyChanging();
					this._tema2 = value;
					this.SendPropertyChanged("tema2");
					this.Ontema2Changed();
				}
			}
		}
		
		[Column(Storage="_Aftor", DbType="NVarChar(MAX)")]
		public string Aftor
		{
			get
			{
				return this._Aftor;
			}
			set
			{
				if ((this._Aftor != value))
				{
					this.OnAftorChanging(value);
					this.SendPropertyChanging();
					this._Aftor = value;
					this.SendPropertyChanged("Aftor");
					this.OnAftorChanged();
				}
			}
		}
		
		[Column(Storage="_Naz", DbType="NVarChar(MAX)")]
		public string Naz
		{
			get
			{
				return this._Naz;
			}
			set
			{
				if ((this._Naz != value))
				{
					this.OnNazChanging(value);
					this.SendPropertyChanging();
					this._Naz = value;
					this.SendPropertyChanged("Naz");
					this.OnNazChanged();
				}
			}
		}
		
		[Column(Storage="_Org", DbType="NVarChar(MAX)")]
		public string Org
		{
			get
			{
				return this._Org;
			}
			set
			{
				if ((this._Org != value))
				{
					this.OnOrgChanging(value);
					this.SendPropertyChanging();
					this._Org = value;
					this.SendPropertyChanged("Org");
					this.OnOrgChanged();
				}
			}
		}
		
		[Column(Storage="_Gorod", DbType="NVarChar(MAX)")]
		public string Gorod
		{
			get
			{
				return this._Gorod;
			}
			set
			{
				if ((this._Gorod != value))
				{
					this.OnGorodChanging(value);
					this.SendPropertyChanging();
					this._Gorod = value;
					this.SendPropertyChanged("Gorod");
					this.OnGorodChanged();
				}
			}
		}
		
		[Column(Storage="_God", DbType="Int")]
		public System.Nullable<int> God
		{
			get
			{
				return this._God;
			}
			set
			{
				if ((this._God != value))
				{
					this.OnGodChanging(value);
					this.SendPropertyChanging();
					this._God = value;
					this.SendPropertyChanged("God");
					this.OnGodChanged();
				}
			}
		}
		
		[Column(Storage="_Str", DbType="NVarChar(MAX)")]
		public string Str
		{
			get
			{
				return this._Str;
			}
			set
			{
				if ((this._Str != value))
				{
					this.OnStrChanging(value);
					this.SendPropertyChanging();
					this._Str = value;
					this.SendPropertyChanged("Str");
					this.OnStrChanged();
				}
			}
		}
		
		[Column(Storage="_Ilustr", DbType="NVarChar(MAX)")]
		public string Ilustr
		{
			get
			{
				return this._Ilustr;
			}
			set
			{
				if ((this._Ilustr != value))
				{
					this.OnIlustrChanging(value);
					this.SendPropertyChanging();
					this._Ilustr = value;
					this.SendPropertyChanged("Ilustr");
					this.OnIlustrChanged();
				}
			}
		}
		
		[Column(Storage="_Slova", DbType="NVarChar(MAX)")]
		public string Slova
		{
			get
			{
				return this._Slova;
			}
			set
			{
				if ((this._Slova != value))
				{
					this.OnSlovaChanging(value);
					this.SendPropertyChanging();
					this._Slova = value;
					this.SendPropertyChanged("Slova");
					this.OnSlovaChanged();
				}
			}
		}
		
		[Column(Storage="_Referat", DbType="NVarChar(MAX)")]
		public string Referat
		{
			get
			{
				return this._Referat;
			}
			set
			{
				if ((this._Referat != value))
				{
					this.OnReferatChanging(value);
					this.SendPropertyChanging();
					this._Referat = value;
					this.SendPropertyChanged("Referat");
					this.OnReferatChanged();
				}
			}
		}
		
		[Column(Storage="_Mesto", DbType="NVarChar(MAX)")]
		public string Mesto
		{
			get
			{
				return this._Mesto;
			}
			set
			{
				if ((this._Mesto != value))
				{
					this.OnMestoChanging(value);
					this.SendPropertyChanging();
					this._Mesto = value;
					this.SendPropertyChanged("Mesto");
					this.OnMestoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserName;
		
		private string _Password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[Column(Storage="_UserName", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_Password", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
